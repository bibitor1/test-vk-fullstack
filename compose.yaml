version: '3.7'
services:
  proxy:
    container_name: cat-pinterest-proxy
    image: nginx:1.24-alpine-slim
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
    depends_on:
      cat-pinterest-api:
        condition: service_started
    ports:
      - "8080:80"
    networks:
      - cat-pinterest-net

  cat-pinterest-api:
    container_name: cat-pinterest-api
    image: cat-pinterest-api
    build:
      context: ./api/
    ports: 
      - "3001:3001"    
    networks:
      - cat-pinterest-net
    environment:
      NODE_ENV: prod
    env_file: 
      - ./api/.env
    depends_on:
      cat-pinterest-api-pg:
        condition: service_healthy

  cat-pinterest-front:
    container_name: cat-pinterest-front
    image: cat-pinterest-front
    build:
      context: ./front/
    networks:
      - cat-pinterest-net
    environment:
      NODE_ENV: prod

  cat-pinterest-api-pg:
    container_name: cat-pinterest-api-pg
    image: postgres:14
    networks:
      - cat-pinterest-net  
    environment:
      POSTGRES_PASSWORD: 1
      POSTGRES_USER: postgres
      POSTGRES_DB: support_lk_db
    ports: 
      - "6501:5432"  
    #      PG_DATA: /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 10

networks:
  cat-pinterest-net:
    name: cat-pinterest-net
    driver: bridge